name: Deploy Backend

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/deploy.yml'

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build JAR (skip tests)
        run: mvn -B -DskipTests package
        working-directory: backend

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & push image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} -f backend/Dockerfile backend
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Deploy to EC2 via SSM
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
        run: |
          aws ssm send-command \
            --instance-ids "${{ secrets.EC2_INSTANCE_ID }}" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy backend ${GITHUB_SHA}" \
            --parameters "{\"commands\":[\"sudo yum install -y docker || true\",\"sudo systemctl enable docker || true\",\"sudo systemctl start docker || true\",\"aws ecr get-login-password --region ${AWS_REGION} | sudo docker login --username AWS --password-stdin ${ECR_REGISTRY}\",\"sudo docker stop ${CONTAINER_NAME} || true\",\"sudo docker rm ${CONTAINER_NAME} || true\",\"sudo docker pull ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}\",\"sudo docker run -d --name ${CONTAINER_NAME} -p 8081:8081 --restart=always -e SPRING_DATASOURCE_URL='${{ secrets.SPING_DATASOURCE_URL }}' -e SPRING_DATASOURCE_USERNAME='${{ secrets.SPRING_DATASOURCE_USERNAME }}' -e SPRING_DATASOURCE_PASSWORD='${{ secrets.SPRING_DATASOURCE_PASSWORD }}' -e JWT_SECRET='${{ secrets.JWT_SECRET }}' ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}\"]}" \
            --region "${{ env.AWS_REGION }}"